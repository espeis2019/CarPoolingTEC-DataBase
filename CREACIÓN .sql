CREATE DATABASE CarpoolingTEC;

drop database CarpoolingTEC;

USE csx48i21toab0xq1;


CREATE TABLE Categorias(
	IdCategoria INT NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(100) NOT NULL,
    PUNTOSPORVIAJE INT NOT NULL,
    VMAXIMOSCATEGORIA INT NOT NULL,
    VMINIMOSCATEGORIA INT NOT NULL,
    PRIMARY KEY(IdCategoria)
);


CREATE TABLE Pasajeros(
	IdPasajero INT NOT NULL AUTO_INCREMENT,
	CEDULA INT NOT NULL UNIQUE,
    CARNET INT NOT NULL UNIQUE,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    CORREO VARCHAR(50) NOT NULL,
    IdCategoria INT NOT NULL,
    PUNTOS INT NOT NULL,
    CONTRASENA VARCHAR(50) NOT NULL,
    ACTIVO BOOLEAN NOT NULL,
    PRIMARY KEY(IdPasajero)
);


CREATE TABLE Amigos(
	IdReceptor INT NOT NULL,
    IdEmisor INT NOT NULL,
    AMIGO BOOLEAN, 
    IdAmigo INT NOT NULL AUTO_INCREMENT UNIQUE,
    PRIMARY KEY(IdReceptor, IdEmisor)
);



CREATE TABLE Autos(
	IdAuto INT NOT NULL AUTO_INCREMENT,
    PLACA VARCHAR(50) NOT NULL,
    MARCA VARCHAR(100) NOT NULL,
    MODELO VARCHAR(100) NOT NULL,
    CAPACIDAD INT NOT NULL,
    IdChofer INT NOT NULL,
    PRIMARY KEY (IdAuto)
);

CREATE TABLE Administradors(
	IdAdmin INT NOT NULL AUTO_INCREMENT,
    IdPasajero INT NOT NULL,
    PRIMARY KEY(IdAdmin)
);

CREATE TABLE Chofers(                                              
	IdChofer INT NOT NULL AUTO_INCREMENT,
    IdPasajerof INT NOT NULL,
    PRIMARY KEY(IdChofer)
);

CREATE TABLE Productos(
	IdProducto INT NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(100) NOT NULL,
    COSTO INT NOT NULL,
    PRIMARY KEY(IdProducto)
);


CREATE TABLE Fechas(
	IdFecha INT NOT NULL AUTO_INCREMENT,
    DIA INT NOT NULL,
    MES INT NOT NULL,
    ANO INT NOT NULL,
    PRIMARY KEY(IdFecha)
);

CREATE TABLE Compras(
	IdCompra INT NOT NULL AUTO_INCREMENT,
    IdPasajeroFC INT NOT NULL,
    IdProductoFC INT NOT NULL,
    DETALLE VARCHAR(100) NOT NULL,
    IdFechaFC INT NOT NULL,
    PRIMARY KEY(IdCompra)
);

CREATE TABLE Parqueos(
	IdParqueo INT NOT NULL AUTO_INCREMENT,
    NUMEROPARQUEO VARCHAR(50) NOT NULL,
    ACTIVO BOOLEAN NOT NULL,
    PRIMARY KEY(IdParqueo)
);


CREATE TABLE Viajes(
	IdViaje INT NOT NULL AUTO_INCREMENT,
    IdChoferFV INT NOT NULL,
    IdAutoFV INT NOT NULL,
    IdParqueoFV INT NOT NULL,
    ACTIVO BOOLEAN NOT NULL,
    MES INT NOT NULL,
    PRIMARY KEY(IdViaje)
);


CREATE TABLE ParticipanteViajes(
	IdParticipante INT NOT NULL AUTO_INCREMENT,
    IdPasajeroFP INT NOT NULL,
    IdViajeFP INT NOT NULL,
    CODIGOVIAJE VARCHAR(100) NOT NULL,
    PRIMARY KEY(IdParticipante)
);



ALTER TABLE Pasajeros
ADD CONSTRAINT IdCategoria 
FOREIGN KEY(IdCategoria) REFERENCES Categorias(IdCategoria);



ALTER TABLE Administradors
ADD CONSTRAINT IdPasajero 
FOREIGN KEY(IdPasajero) REFERENCES Pasajeros(IdPasajero);




ALTER TABLE Chofers
ADD CONSTRAINT IdPasajerof 
FOREIGN KEY(IdPasajerof) REFERENCES Pasajeros(IdPasajero);


ALTER TABLE Autos
ADD CONSTRAINT IdChofer 
FOREIGN KEY(IdChofer) REFERENCES Chofers(IdChofer);


ALTER TABLE Compras
ADD CONSTRAINT IdPasajeroFC 
FOREIGN KEY(IdPasajeroFC) REFERENCES Pasajeros(IdPasajero);

ALTER TABLE Compras
ADD CONSTRAINT IdProductoFC 
FOREIGN KEY(IdProductoFC) REFERENCES Productos(IdProducto);

ALTER TABLE Compras
ADD CONSTRAINT IdFechaFC 
FOREIGN KEY(IdFechaFC) REFERENCES Fechas(IdFecha);



ALTER TABLE Viajes
ADD CONSTRAINT IdChoferFV 
FOREIGN KEY(IdChoferFV) REFERENCES Chofers(IdChofer);

ALTER TABLE Viajes
ADD CONSTRAINT IdAutoFV 
FOREIGN KEY(IdAutoFV) REFERENCES Autos(IdAuto);


ALTER TABLE Viajes
ADD CONSTRAINT IdParqueoFV 
FOREIGN KEY(IdParqueoFV) REFERENCES Parqueos(IdParqueo);



ALTER TABLE ParticipanteViajes
ADD CONSTRAINT IdPasajeroFP 
FOREIGN KEY(IdPasajeroFP) REFERENCES Pasajeros(IdPasajero);

ALTER TABLE ParticipanteViajes
ADD CONSTRAINT IdViajeFP 
FOREIGN KEY(IdViajeFP) REFERENCES Viajes(IdViaje);



ALTER TABLE Amigos
ADD CONSTRAINT IdReceptor 
FOREIGN KEY(IdReceptor) REFERENCES Pasajeros(IdPasajero);

ALTER TABLE Amigos
ADD CONSTRAINT IdEmisor 
FOREIGN KEY(IdEmisor) REFERENCES Pasajeros(IdPasajero);



CREATE TABLE Validaciones(
CARNET INT NOT NULL UNIQUE,
PRIMARY KEY(CARNET)
);